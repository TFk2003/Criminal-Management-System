@model CriminalManagementSystem.Models.Evidence

@{
    ViewBag.Title = "Edit Evidence";
}

<h2>Edit Evidence</h2>

@using (Html.BeginForm("Edit", "Evidence", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EvidenceID)
    @Html.HiddenFor(model => model.EvidenceNumber)

    <div class="form-group">
        @Html.LabelFor(model => model.EvidenceTypeID, "Evidence Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.EvidenceTypeID, (SelectList)ViewBag.EvidenceTypeID, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EvidenceTypeID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CaseID, "Case ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CaseID, (SelectList)ViewBag.CaseID, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CaseID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CollectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var collectionDateValue = Model?.CollectionDate.ToString("yyyy-MM-dd") ?? "";
            }
            @Html.EditorFor(model => model.CollectionDate, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
                    @type = "date",
                    @value = collectionDateValue
                }
            })
            @Html.ValidationMessageFor(model => model.CollectionDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CollectedBy, "Collected By", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CollectedBy, (SelectList)ViewBag.CollectedBy, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CollectedBy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StorageLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StorageLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StorageLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DispositionDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var dispositionDateValue = Model?.DispositionDate?.ToString("yyyy-MM-dd") ?? "";
            }
            @Html.EditorFor(model => model.DispositionDate, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
                    @type = "date",
                    @value = dispositionDateValue
                }
            })
            @Html.ValidationMessageFor(model => model.DispositionDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DispositionMethod, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var methods = new List<SelectListItem>
        {
            new SelectListItem { Text = "Returned to Owner", Value = "Returned to Owner" },
            new SelectListItem { Text = "Destroyed", Value = "Destroyed" },
            new SelectListItem { Text = "Donated", Value = "Donated" },
            new SelectListItem { Text = "Auctioned", Value = "Auctioned" },
            new SelectListItem { Text = "Other", Value = "Other" }
        };
            }
            @Html.DropDownListFor(model => model.DispositionMethod, methods, "-- Select Method --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DispositionMethod, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var statusOptions = new List<SelectListItem>
            {
                new SelectListItem { Text = "In Storage", Value = "In Storage", Selected = true },
                new SelectListItem { Text = "Analyzed", Value = "Analyzed" },
                new SelectListItem { Text = "Returned", Value = "Returned" },
                new SelectListItem { Text = "Destroyed", Value = "Destroyed" },
                new SelectListItem { Text = "Pending Analysis", Value = "Pending Analysis" },
                new SelectListItem { Text = "Disposed", Value = "Disposed" }
            };
            }
            @Html.DropDownListFor(model => model.Status, statusOptions, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", rows = 4 })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>
}