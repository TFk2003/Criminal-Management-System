@model CriminalManagementSystem.Models.EvidenceChainOfCustody

@{
    ViewBag.Title = "Add Chain Of Custody";
}

<h2>Add Chain of Custody for Evidence @ViewBag.EvidenceNumber</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EvidenceID)

    <div class="form-group">
        @Html.LabelFor(model => model.CustodyDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var custodayDateValue = Model?.CustodyDate.ToString("yyyy-MM-dd") ?? "";
            }
            @Html.EditorFor(model => model.CustodyDate, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
                    @type = "date",
                    @value = custodayDateValue
                }
            })
            @Html.ValidationMessageFor(model => model.CustodyDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReceivedBy, "Received By", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ReceivedBy", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ReleasedBy, "Released By", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ReleasedBy", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReleasedBy, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TransferReason, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TransferReason,
                new SelectList(new List<string>
                {
                    "Overcrowding",
                    "Security Concern",
                    "Medical Treatment",
                    "Court Appearance",
                    "Facility Upgrade",
                    "Behavioral Issues",
                    "Closer to Family",
                    "Rehabilitation Program"
                }),
                "-- Select Transfer Reason --",
                htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TransferReason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", rows = 3 })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Details", new { id = Model?.EvidenceID ?? ViewBag.EvidenceID }, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>
}
